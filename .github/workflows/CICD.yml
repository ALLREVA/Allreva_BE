name: CI/CD

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB }}


    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          mkdir -p src/test/resources
          echo "${{ secrets.CI_YML }}" | base64 --decode > src/main/resources/application.yml
          echo "${{ secrets.CI_YML }}" | base64 --decode > src/test/resources/application.yml

      - name: Start Redis
        uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 6

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

  cd:
    needs: ci
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.CD_YML }}" | base64 --decode > src/main/resources/application.yml

      - name: DockerHub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest .

      - name: DockerHub 푸시
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest

      - name: AWS EC2 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
            docker stop $(docker ps -a -q) || true
            docker rm $(docker ps -a -q) || true
            docker run -d -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
name: CI

on:
  push:
    branches:
      - develop
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB }}
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        options: >-
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Elasticsearch Plugin and Restart
        run: |
          docker exec ${{ job.services.elasticsearch.id }} elasticsearch-plugin install analysis-nori
          docker restart ${{ job.services.elasticsearch.id }}
          sleep 30

      - name: Configure Elasticsearch
        run: |
          cat << EOF > es_settings.json
          {
            "settings": {
              "analysis": {
                "tokenizer": {
                  "nori_tokenizer": {
                    "type": "nori_tokenizer"
                  }
                },
                "analyzer": {
                  "korean_mixed": {
                    "type": "custom",
                    "tokenizer": "nori_tokenizer",
                    "filter": [
                      "nori_readingform",
                      "lowercase",
                      "nori_part_of_speech",
                      "nori_number"
                    ]
                  }
                }
              }
            },
            "mappings": {
              "properties": {
                "title": {
                  "type": "text",
                  "analyzer": "korean_mixed"
                },
                "content": {
                  "type": "text",
                  "analyzer": "korean_mixed"
                }
              }
            }
          }
          EOF
          curl -X PUT "localhost:9200/your_index_name" -H "Content-Type: application/json" -d @es_settings.json

      - name: Verify Elasticsearch Configuration
        run: |
          curl -X GET "localhost:9200/_cat/plugins"
          curl -X GET "localhost:9200/your_index_name/_settings"
          curl -X GET "localhost:9200/your_index_name/_mapping"

      - name: Create resource directories
        run: |
          mkdir -p src/main/resources
          mkdir -p src/test/resources

      - name: Set up secret yml file
        env:
          YAML_SECRET: ${{ secrets.YAML_SECRET }}
        run: |
          echo $YAML_SECRET | base64 --decode > src/main/resources/application.yml
          echo $YAML_SECRET | base64 --decode > src/test/resources/application.yml

      - name: Start Redis
        uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 6

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Wait for services to be ready
        run: |
          sleep 30
          curl -X GET "http://localhost:9200/_cluster/health"
          curl -X GET "localhost:3306" || true
          redis-cli ping || true

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test
